AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Insight-Service-Deployment-Descriptor

Parameters:
  Stage:
    Type: String
    Description: Stage name to deploy resources to
    AllowedValues:
      - dev
      - prod

Globals:
  Function:
    Runtime: java11
    MemorySize: 1024
    Timeout: 20
    AutoPublishAlias: !Ref Stage
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker
    CodeUri: ./application
    Tags:
      Stage: !Ref Stage
      Service: Insight
      Resource: Lambda
    Environment:
      Variables:
        TABLE: !Ref InsightTable
        APPLICATION_ENVIRONMENT: !Ref Stage
        CLOUD_REGION: us-east-1
        MAIN_CLASS: com.tekcapzule.insight.application.InsightApplication
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1

Resources:

  # Setup API Gateway

  InsightApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "insight-${Stage}"
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'X-Forwarded-For, Content-Type, Authorization, X-User-Login, X-Channel-Code'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
        AllowCredentials: false
      Variables:
        LAMBDA_ALIAS: !Ref Stage

  # Setup DynamoDB Table

  InsightTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Stage}Insight"
      AttributeDefinitions:
        - AttributeName: insightId
          AttributeType: S
        - AttributeName: topic
          AttributeType: S
        - AttributeName: publishedOn
          AttributeType: S
      KeySchema:
        - AttributeName: insightId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

      GlobalSecondaryIndexes:
        - IndexName: insightGSI
          KeySchema:
            - AttributeName: topic
              KeyType: HASH
            - AttributeName: publishedOn
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

  # Setup Lambda Functions

  CreateNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Insight-CreateNews"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:  !Ref InsightTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: createNewsFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: insight/createNews
            Method: post
            RestApiId:
              Ref: InsightApi

  UpdateNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Insight-UpdateNews"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:  !Ref InsightTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: updateNewsFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: insight/updateNews
            Method: post
            RestApiId:
              Ref: InsightApi

  GetAllNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Insight-GetAllNews"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:  !Ref InsightTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getAllNewsFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: insight/getAllNews
            Method: post
            RestApiId:
              Ref: InsightApi

  CreateIndexRecordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Insight-CreateIndexRecord"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref InsightTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: createIndexRecordFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: insight/createIndexRecord
            Method: post
            RestApiId:
              Ref: InsightApi

  UpdateIndexRecordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Insight-UpdateIndexRecord"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:  !Ref InsightTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: updateIndexRecordFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: insight/updateIndexRecord
            Method: post
            RestApiId:
              Ref: InsightApi

  GetAllIndexRecordsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Insight-GetAllIndexRecords"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:  !Ref InsightTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getAllIndexRecordsFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: insight/getAllIndexRecords
            Method: post
            RestApiId:
              Ref: InsightApi
  LoadTickerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Insight-LoadTickerFunction"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:  !Ref InsightTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: loadTickerFunction
          REAL_STONKS_STOCK_SERVICE_API_URL: "https://realstonks.p.rapidapi.com/%s"
          REAL_STONKS_STOCK_SERVICE_API_HOST: "realstonks.p.rapidapi.com"
          REAL_STONKS_STOCK_SERVICE_API_KEY:
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: insight/loadTickerFunction
            Method: post
            RestApiId:
              Ref: InsightApi



  # Set Output Variable

Outputs:
  InsightApiEndpoint:
    Description: "Insight API endpoint."
    Value: !Sub "https://${InsightApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/insight"
